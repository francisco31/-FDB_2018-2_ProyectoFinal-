DROP DATABASE APP
GO
CREATE DATABASE APP;
GO
USE APP
GO
CREATE SCHEMA FARMACIA;
GO
USE FARMACIA

CREATE TABLE APP.FARMACIA.CLIENTES(
	curp 				CHAR(18) PRIMARY KEY,
	nombre				VARCHAR(25),
	paterno 			VARCHAR(25),
	materno 			VARCHAR(25), 	
	calle_principal		VARCHAR(255),
	colonia				VARCHAR(255),
	delegacion_municipio VARCHAR(100),
	estado				VARCHAR(100),
	ciudad				VARCHAR(100),
	calle_1				VARCHAR(100),
	calle_2				VARCHAR(100),
	referencia			VARCHAR(255),
	codigo_postal		INTEGER,
	num_exterior		INTEGER,
	num_interior		INTEGER
);

CREATE TABLE APP.FARMACIA.MONEDEROS_ELECTRONICOS(
	identificador 		INTEGER PRIMARY KEY IDENTITY(1,1), 
	curp				CHAR(18) FOREIGN KEY REFERENCES FARMACIA.CLIENTES(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	saldo 				MONEY
);

CREATE TABLE APP.FARMACIA.MEDICAMENTOS(
	sku 				INT PRIMARY KEY,
	precio 				MONEY, 
	nombre 				VARCHAR(50),
	marca				VARCHAR(50),
	presentacion		VARCHAR(50),
	requiere_receta		CHAR(1) -- s para si , n para no
);

CREATE TABLE APP.FARMACIA.INGREDIENTES_ACTIVOS(
	ingrediente_activo 	VARCHAR(50) not null,
	sku 				INT FOREIGN KEY REFERENCES FARMACIA.MEDICAMENTOS(sku) ON UPDATE CASCADE ON DELETE CASCADE not null,
	PRIMARY KEY (ingrediente_activo , sku)
);

CREATE TABLE APP.FARMACIA.COMPRAR(
	curp 				CHAR(18) FOREIGN KEY REFERENCES FARMACIA.CLIENTES(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	sku 				INT FOREIGN KEY REFERENCES FARMACIA.MEDICAMENTOS(sku) ON UPDATE CASCADE ON DELETE CASCADE not null,
	fecha 				DATE,
	hora 				TIME,
	requiere_domicilio	CHAR(1), -- s para si , n para no
	tipo_pago			CHAR(20),
	cantidad 			INT 
);

CREATE TABLE APP.FARMACIA.EMPLEADOS(
	curp 				CHAR(18) PRIMARY KEY,
	nombre				VARCHAR(25),
	paterno 			VARCHAR(25),
	materno 			VARCHAR(25), 	
	calle_principal		VARCHAR(255),
	colonia				VARCHAR(255),
	delegacion_municipio VARCHAR(100),
	estado				VARCHAR(100),
	ciudad				VARCHAR(100),
	calle_1				VARCHAR(100),
	calle_2				VARCHAR(100),
	referencia			VARCHAR(255),
	codigo_postal		INTEGER,
	num_exterior		INTEGER,
	num_interior		INTEGER,
	rfc 				CHAR(13),
	num_seguro_social	BIGINT
);

--En el modelo normalizado aparece como una sola tabla
--para correos y una para telefonos, pero se cambio
--para conversar integridad referencial.

CREATE TABLE APP.FARMACIA.TELEFONOS_CLIENTES(
	telefono 		BIGINT not null,
	curp 			CHAR(18) not null,
	PRIMARY KEY (telefono , CURP)
);

CREATE TABLE APP.FARMACIA.TELEFONOS_EMPLEADOS(
	telefono 		BIGINT not null,
	curp 			CHAR(18) not null,
	PRIMARY KEY (telefono , CURP)
);

CREATE TABLE APP.FARMACIA.CORREOS_ELECTRONICOS_CLIENTES(
	curp  				VARCHAR(18)  not null,
	correo_electronico 	VARCHAR(255) not null,
	PRIMARY KEY (CURP , correo_electronico)
);

CREATE TABLE APP.FARMACIA.CORREOS_ELECTRONICOS_EMPLEADOS(
	curp  				VARCHAR(18)  not null,
	correo_electronico 	VARCHAR(255) not null,
	PRIMARY KEY (CURP , correo_electronico)
);

CREATE TABLE APP.FARMACIA.MEDICOS(
	num_cedula_profesional 	BIGINT not null,
	curp	 				CHAR(18) PRIMARY KEY FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null
);

CREATE TABLE APP.FARMACIA.ESPECIALIDADES(
	especialidad 		CHAR(100) not null,
	curp 				CHAR(18) FOREIGN KEY REFERENCES FARMACIA.MEDICOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	PRIMARY KEY(especialidad , curp)
);	

CREATE TABLE APP.FARMACIA.MOSTRADORES(
	curp 				CHAR(18) PRIMARY KEY FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null
);

CREATE TABLE APP.FARMACIA.INTENDENCIAS(
	curp 				CHAR(18) PRIMARY KEY FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null
);

CREATE TABLE APP.FARMACIA.GENERALES(
	curp 				CHAR(18) PRIMARY KEY FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null
);

CREATE TABLE APP.FARMACIA.CHOFERES(
	curp 				CHAR(18) PRIMARY KEY FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	transporte 			VARCHAR(50),
	num_licencia 		BIGINT
);

CREATE TABLE APP.FARMACIA.SUCURSALES(
	identificador 		INT PRIMARY KEY IDENTITY(1,1),
	calle_1				VARCHAR(100),
	calle_2				VARCHAR(100),
	codigo_postal		INTEGER,
	ciudad				VARCHAR(100),
	estado				VARCHAR(100),
	colonia				VARCHAR(255),
	referencia			VARCHAR(255),
	num_exterior		INTEGER,
	num_interior		INTEGER,
	calle_principal		VARCHAR(255),
	delegacion_municipio VARCHAR(100),
);

CREATE TABLE APP.FARMACIA.TELEFONOS_SUCURSALES(
	telefono 		BIGINT not null,
	identificador 	INT  FOREIGN KEY REFERENCES FARMACIA.SUCURSALES(identificador) ON UPDATE CASCADE ON DELETE CASCADE not null,
	PRIMARY KEY(telefono, identificador)
);

CREATE TABLE APP.FARMACIA.TRABAJAR(
	curp			CHAR(18) FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	identificador	INT  FOREIGN KEY REFERENCES FARMACIA.SUCURSALES(identificador) ON UPDATE CASCADE ON DELETE CASCADE not null	
);

CREATE TABLE APP.FARMACIA.RESPONSABLES(
	curp			CHAR(18) FOREIGN KEY REFERENCES FARMACIA.EMPLEADOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	identificador	INT  FOREIGN KEY REFERENCES FARMACIA.SUCURSALES(identificador) ON UPDATE CASCADE ON DELETE CASCADE not null,
	turno 			CHAR(10)
);

CREATE TABLE APP.FARMACIA.CONSULTAS(
	identificador 	INTEGER PRIMARY KEY IDENTITY(1,1),
	curp 			CHAR(18) FOREIGN KEY REFERENCES FARMACIA.MEDICOS(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	turno 			CHAR(10),
	tipo 			CHAR(50),
	costo			MONEY,
	fecha			DATE
);

CREATE TABLE APP.FARMACIA.SOLICITAR(
	curp			CHAR(18) FOREIGN KEY REFERENCES FARMACIA.CLIENTES(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
	identificador	INT  FOREIGN KEY REFERENCES FARMACIA.CONSULTAS(identificador) ON UPDATE CASCADE ON DELETE CASCADE not null
);

CREATE TABLE APP.FARMACIA.RECETAS(
	num_receta 		INTEGER PRIMARY KEY IDENTITY(1,1),
	identificador	INT  FOREIGN KEY REFERENCES FARMACIA.CONSULTAS(identificador) ON UPDATE CASCADE ON DELETE CASCADE not null,
	fecha_siguiente_consulta 	DATE,
	firma_digital	VARCHAR(29)
);

CREATE TABLE APP.FARMACIA.ESPECIFICACIONES_ADICIONALES(
	especificacion_adicional 		VARCHAR(255),
	num_receta 		INT  FOREIGN KEY REFERENCES FARMACIA.RECETAS(num_receta) ON UPDATE CASCADE ON DELETE CASCADE not null,
	PRIMARY KEY(especificacion_adicional , num_receta)
);

CREATE TABLE APP.FARMACIA.VENDER(
	sku 		INT FOREIGN KEY REFERENCES FARMACIA.MEDICAMENTOS(sku) ON UPDATE CASCADE ON DELETE CASCADE not null,
	curp 		CHAR(18) FOREIGN KEY REFERENCES FARMACIA.MOSTRADORES(curp) ON UPDATE CASCADE ON DELETE CASCADE not null,
);

CREATE TABLE APP.FARMACIA.CONTENER(
	sku 			INT FOREIGN KEY REFERENCES FARMACIA.MEDICAMENTOS(sku) ON UPDATE CASCADE ON DELETE CASCADE not null,
	num_receta 		INT  FOREIGN KEY REFERENCES FARMACIA.RECETAS(num_receta) ON UPDATE CASCADE ON DELETE CASCADE not null,
	dosis 			VARCHAR(100)
);	
GO

-- Clientes
ALTER TABLE APP.FARMACIA.CLIENTES ADD CONSTRAINT ck_ClientesCURP CHECK (curp LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');
ALTER TABLE APP.FARMACIA.CLIENTES ADD CONSTRAINT ck_Clientes_num_exterior CHECK (num_exterior > 0);
ALTER TABLE APP.FARMACIA.CLIENTES ADD CONSTRAINT ck_Clientes_num_interior CHECK (num_interior > 0);
ALTER TABLE APP.FARMACIA.CLIENTES ADD CONSTRAINT ck_Clientes_codigo_postal CHECK (codigo_postal LIKE '[0-9][0-9][0-9][0-9][0-9]');

-- Monedero_Electronico
ALTER TABLE APP.FARMACIA.MONEDEROS_ELECTRONICOS ADD CONSTRAINT ck_identificador CHECK (identificador > 0);

-- Medicamentos
ALTER TABLE APP.FARMACIA.MEDICAMENTOS ADD CONSTRAINT ck_sku CHECK (sku LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

-- Empleados 
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_EmpleadosCURP CHECK (CURP LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_Empleadosnum_exterior CHECK (num_exterior > 0);
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_Empleadosnum_interior CHECK (num_interior > 0);
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_Empleadoscodigo_postal CHECK (codigo_postal LIKE '[0-9][0-9][0-9][0-9][0-9]');
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_EmpleadosRFC CHECK (RFC LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][0-9]');
ALTER TABLE APP.FARMACIA.EMPLEADOS add CONSTRAINT ck_Empleadosnum_seg_social CHECK (num_seguro_social LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

-- TELEFONOS_CLIENTES
ALTER TABLE APP.FARMACIA.TELEFONOS_CLIENTES ADD CONSTRAINT ck_Telefono_Cliente_CURP CHECK (curp LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');
ALTER TABLE APP.FARMACIA.TELEFONOS_CLIENTES ADD CONSTRAINT ck_Telefono_Cliente CHECK (telefono LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

-- TELEFONOS_EMPLEADOS
ALTER TABLE APP.FARMACIA.TELEFONOS_EMPLEADOS ADD CONSTRAINT ck_Telefono_Empleado_CURP CHECK (curp LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');
ALTER TABLE APP.FARMACIA.TELEFONOS_EMPLEADOS ADD CONSTRAINT ck_Telefono_Empleado CHECK (telefono LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

--CORREOS_ELECTRONICOS_CLIENTES
ALTER TABLE APP.FARMACIA.CORREOS_ELECTRONICOS_CLIENTES ADD CONSTRAINT ck_Correo_Electronico_Cliente CHECK (curp LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');

--CORREOS_ELECTRONICOS_EMPLEADOS
ALTER TABLE APP.FARMACIA.CORREOS_ELECTRONICOS_EMPLEADOS ADD CONSTRAINT ck_Correo_Electronico_Empleado CHECK (curp LIKE '[A-Z][A-Z][A-Z][A-Z][0-9][0-9][0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][0-9][0-9]');

--Medicos
ALTER TABLE APP.FARMACIA.MEDICOS ADD CONSTRAINT ck_Medicos_cedula CHECK (num_cedula_profesional LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

--Sucursales
ALTER TABLE APP.FARMACIA.SUCURSALES ADD CONSTRAINT ck_Sucursalesidentificador CHECK (identificador > 0);
ALTER TABLE APP.FARMACIA.SUCURSALES ADD CONSTRAINT ck_Sucursalesnum_exterior CHECK (num_exterior > 0);
ALTER TABLE APP.FARMACIA.SUCURSALES ADD CONSTRAINT ck_Sucursalesnum_interior CHECK (num_interior > 0);
ALTER TABLE APP.FARMACIA.SUCURSALES ADD CONSTRAINT ck_Sucursalescodigo_postal CHECK (codigo_postal LIKE '[0-9][0-9][0-9][0-9][0-9]');

--Telefono_Sucursales
ALTER TABLE APP.FARMACIA.TELEFONOS_SUCURSALES ADD CONSTRAINT ck_Telefono_SucTelefono CHECK (telefono LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]');

-- Consultas
ALTER TABLE APP.FARMACIA.CONSULTAS ADD CONSTRAINT ck_Consultas_identificador CHECK (identificador > 0);

--Recetas
ALTER TABLE APP.FARMACIA.RECETAS ADD CONSTRAINT ck_Recetas_firma CHECK (firma_digital LIKE '[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]');






	